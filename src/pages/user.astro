---
import '@/styles/global.css';

interface UserData {
  id: string;
  username: string;
  avatar: string | null;
  discriminator: string;
  public_flags: number;
  flags: number;
  banner: string | null;
  accent_color: number | null;
  global_name: string;
  avatar_decoration_asset: string | null;
  nameplate_asset: string | null;
  nameplate_palette: string | null;
  guild_id: string | null;
  clan_badge: string | null;
  clan_tag: string | null;
}

async function getUserData(userId: string): Promise<UserData | null> {
  try {
    const apiUrl = new URL('/api/user', Astro.url);
    apiUrl.searchParams.set('id', userId);

    const response = await fetch(apiUrl);
    if (!response.ok) {
      return null;
    }

    const userData = await response.json() as UserData;
    return userData;
  } catch (error) {
    console.error('Error fetching user data:', error);
    return null;
  }
}

const params = Astro.url.searchParams;
const userId = params.get('id') || "";
const darkTheme = params.get('theme') !== "light";
const showAvatar = params.get('avatar') !== "false";
const showBanner = params.get('banner') !== "false";
const showNameplate = params.get('nameplate') !== "false";
const nameplateAnimated = params.get('nameplate_animated') !== "false";
const showClanBadge = params.get('clan') !== "false";
const showDecoration = params.get('decoration') !== "false";
const showGlobalName = params.get('global_name') !== "false";
const avatarSize = params.get('size') || "128";
let bannerExtension = params.get('ext') || "webp";
if (bannerExtension === "auto") {
  bannerExtension = "webp"; // Default to webp, will be changed to gif if animated
}

let userData: UserData | null = null;
let errorMessage: string | null = null;

if (!userId) {
  errorMessage = "Please provide a Discord user ID";
} else {
  userData = await getUserData(userId);
  if (!userData) {
    errorMessage = "Failed to fetch user data";
  }
}

let avatarUrl = '';
let bannerUrl = '';
let avatarDecorationUrl = '';
let nameplateUrl = '';
let clanBadgeUrl = '';
const discordLogoUrl = darkTheme ? "/discord.png" : "/discord-black.png";

function hexToRgb(hex: number | null): string {
  if (hex === null) {
    return darkTheme ? '#5865F2' : '#5865F2';
  }

  const r = (hex >> 16) & 255;
  const g = (hex >> 8) & 255;
  const b = hex & 255;

  return `rgb(${r}, ${g}, ${b})`;
}

let bannerColor = '';

function getNameplateGradient(palette: string | null): string {
  if (!palette) return 'linear-gradient(90deg, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0.4) 100%)';

  const gradients: Record<string, string> = {
    'cobalt': 'linear-gradient(90deg, rgba(47,128,237,0.1) 0%, rgba(47,128,237,0.4) 100%)',
    'sky': 'linear-gradient(90deg, rgba(0,128,183,0.1) 0%, rgba(0,128,183,0.4) 100%)',
    'crimson': 'linear-gradient(90deg, rgba(235,87,87,0.1) 0%, rgba(235,87,87,0.4) 100%)',
    'emerald': 'linear-gradient(90deg, rgba(39,174,96,0.1) 0%, rgba(39,174,96,0.4) 100%)',
    'amethyst': 'linear-gradient(90deg, rgba(155,81,224,0.1) 0%, rgba(155,81,224,0.4) 100%)',
    'gold': 'linear-gradient(90deg, rgba(242,201,76,0.1) 0%, rgba(242,201,76,0.4) 100%)',
    'orange': 'linear-gradient(90deg, rgba(242,153,74,0.1) 0%, rgba(242,153,74,0.4) 100%)',
    'pink': 'linear-gradient(90deg, rgba(242,166,166,0.1) 0%, rgba(242,166,166,0.4) 100%)',
    'berry': 'linear-gradient(90deg, transparent 0%, rgba(137, 58, 153, 0.08) 20%, rgba(137, 58, 153, 0.08) 50%, rgba(137, 58, 153, 0.2) 100%)',
  };

  return gradients[palette.toLowerCase()] || 'linear-gradient(90deg, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0.4) 100%)';
}

if (userData) {
  avatarUrl = userData.avatar ?
    `https://cdn.discordapp.com/avatars/${userId}/${userData.avatar}?size=${avatarSize}` :
    `https://cdn.discordapp.com/embed/avatars/${parseInt(userData.discriminator) % 5}.png?size=${avatarSize}`;

  const isAnimatedBanner = userData.banner && userData.banner.startsWith('a_');
  if (isAnimatedBanner && (params.get('ext') === null || params.get('ext') === 'auto')) {
    bannerExtension = 'gif';
  }

  const staticParam = (bannerExtension !== 'gif' && isAnimatedBanner) ? '&static=1' : '';
  bannerUrl = userData.banner ?
    `https://cdn.discordapp.com/banners/${userId}/${userData.banner}.${bannerExtension}?size=480${staticParam}` : "";

  bannerColor = hexToRgb(userData.accent_color);

  avatarDecorationUrl = userData.avatar_decoration_asset ?
    `https://cdn.discordapp.com/avatar-decoration-presets/${userData.avatar_decoration_asset}.png?size=160&passthrough=true` : "";

  nameplateUrl = userData.nameplate_asset ?
    nameplateAnimated ?
      `https://cdn.discordapp.com/assets/collectibles/${userData.nameplate_asset}asset.webm` :
      `https://cdn.discordapp.com/assets/collectibles/${userData.nameplate_asset}static.png`
    : "";

  clanBadgeUrl = userData.clan_badge && userData.guild_id ?
    `https://cdn.discordapp.com/clan-badges/${userData.guild_id}/${userData.clan_badge}.png?size=16` : "";
}

Astro.response.headers.set('Cache-Control', 'public, max-age=600');
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Discord User Widget</title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;600;700&display=swap" rel="stylesheet" />
  <style>
    body, html {
      margin: 0;
      padding: 0;
      overflow: hidden;
      width: 100%;
      height: 100%;
    }

    .discord-widget {
      font-family: 'Noto Sans JP', sans-serif;
      background-color: #ffffff;
      border-radius: 8px;
      box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.1);
      overflow: hidden;
      width: 288px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    .discord-dark {
      background-color: #36393f;
      color: #ffffff;
    }
    .discord-banner-section {
      height: 96px;
      position: relative;
      overflow: hidden;
      flex-shrink: 0;
    }
    .discord-banner {
      height: 100%;
      width: 100%;
      background-size: cover;
      background-position: center;
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
    }
    .discord-user-section {
      height: 64px;
      padding: 8px 16px;
      display: flex;
      align-items: center;
      gap: 8px;
      position: relative;
      overflow: hidden;
      flex-shrink: 0;
    }
    .with-global-name .discord-user-section {
      height: 80px;
    }
    .discord-nameplate {
      position: absolute;
      top: 0;
      left: -64px;
      right: 0;
      bottom: 0;
      overflow: hidden;
      z-index: 0;
      background: var(--nameplate-gradient);
    }
    .discord-nameplate video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .discord-nameplate img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    .discord-avatar-container {
      position: relative;
      flex-shrink: 0;
      z-index: 1;
    }
    .discord-avatar-wrapper {
      position: relative;
      width: 48px;
      height: 48px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .discord-avatar {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      border: 3px solid var(--bg-color);
      position: relative;
      z-index: 1;
    }
    .discord-avatar-decoration {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      transform: scale(1.03);
      pointer-events: none;
      z-index: 2;
      object-fit: contain;
    }
    .discord-user-details {
      flex-grow: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      overflow: hidden;
      position: relative;
      z-index: 1;
    }
    .discord-username {
      font-size: 13px;
      font-weight: 400;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      opacity: 0.8;
      margin-bottom: 2px;
    }

    /* When global name is not shown, make username more prominent */
    .discord-user-details:not(:has(.discord-global-name)) .discord-username,
    .discord-user-details.no-global-name .discord-username {
      font-size: 14px;
      font-weight: 600;
      opacity: 1;
    }

    .discord-global-name {
      font-size: 14px;
      font-weight: 600;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    .discord-tag {
      font-size: 12px;
      color: var(--tag-color);
      display: flex;
      align-items: center;
      gap: 4px;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    .discord-mini-logo {
      width: 12px;
      height: 12px;
      flex-shrink: 0;
    }
    .discord-clan {
      display: inline-flex;
      align-items: center;
      background-color: var(--clan-bg);
      padding: 1px 4px;
      border-radius: 3px;
      margin-left: 2px;
      flex-shrink: 0;
    }
    .discord-clan img {
      width: 12px;
      height: 12px;
      margin-right: 3px;
      flex-shrink: 0;
    }
    .discord-clan-tag {
      font-size: 10px;
      font-weight: 500;
    }

    .discord-widget.with-banner {
      height: 160px;
    }

    .discord-widget.without-banner {
      height: 64px;
    }

    .discord-widget.without-banner.with-global-name {
      height: 80px;
    }

    .discord-error {
      padding: 12px 16px;
      text-align: center;
      font-size: 14px;
      line-height: 1.4;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      height: 100%;
    }
    .discord-error-icon {
      font-size: 24px;
      margin-bottom: 8px;
    }
  </style>
</head>
<body>
  {errorMessage ? (
    <div class={`discord-widget ${darkTheme ? 'discord-dark' : ''} without-banner`} style={`
      --bg-color: ${darkTheme ? '#36393f' : '#ffffff'};
      --tag-color: ${darkTheme ? '#b9bbbe' : '#72767d'};
      --clan-bg: ${darkTheme ? 'rgba(79,84,92,0.3)' : 'rgba(79,84,92,0.1)'};
    `}>
      <div class="discord-error">
        <div class="discord-error-icon">⚠️</div>
        <div>{errorMessage}</div>
      </div>
    </div>
  ) : (
    <div class={`discord-widget ${darkTheme ? 'discord-dark' : ''} ${showBanner ? 'with-banner' : 'without-banner'} ${(!showBanner && showGlobalName) ? 'with-global-name' : ''}`} style={`
      --bg-color: ${darkTheme ? '#36393f' : '#ffffff'};
      --tag-color: ${darkTheme ? '#b9bbbe' : '#72767d'};
      --clan-bg: ${darkTheme ? 'rgba(79,84,92,0.3)' : 'rgba(79,84,92,0.1)'};
      --nameplate-gradient: ${getNameplateGradient(userData?.nameplate_palette || null)};
    `}>
      {showBanner && (
        <div class="discord-banner-section">
          {bannerUrl ? (
            <div class="discord-banner" style={`background-image: url('${bannerUrl}')`}></div>
          ) : (
            <div class="discord-banner" style={`background-color: ${bannerColor}`}></div>
          )}
        </div>
      )}
      <div class="discord-user-section">
        {showNameplate && nameplateUrl && (
          <div class="discord-nameplate">
            {nameplateAnimated ? (
              <video autoplay loop muted playsinline>
                <source src={nameplateUrl} type="video/webm">
              </video>
            ) : (
              <img src={nameplateUrl} alt="Nameplate" />
            )}
          </div>
        )}
        {showAvatar && avatarUrl && (
          <div class="discord-avatar-container">
            <div class="discord-avatar-wrapper">
              <img class="discord-avatar" src={avatarUrl} alt="Discord Avatar" />
              {showDecoration && avatarDecorationUrl && (
                <img class="discord-avatar-decoration" src={avatarDecorationUrl} alt="Avatar Decoration" />
              )}
            </div>
          </div>
        )}
        <div class={`discord-user-details ${showGlobalName && userData?.global_name ? 'has-global-name' : 'no-global-name'}`}>
          {showGlobalName && userData?.global_name && (
            <div class="discord-global-name">
              {userData.global_name}
              {showClanBadge && userData?.clan_tag && clanBadgeUrl && (
                <span class="discord-clan">
                  <img src={clanBadgeUrl} alt="Clan Badge" />
                  <span class="discord-clan-tag">{userData.clan_tag}</span>
                </span>
              )}
            </div>
          )}
          <div class="discord-username">
            {userData?.username || "Unknown User"}
            {!showGlobalName && showClanBadge && userData?.clan_tag && clanBadgeUrl && (
              <span class="discord-clan">
                <img src={clanBadgeUrl} alt="Clan Badge" />
                <span class="discord-clan-tag">{userData.clan_tag}</span>
              </span>
            )}
          </div>
          <div class="discord-tag">
            <img class="discord-mini-logo" src={discordLogoUrl} alt="Discord Logo" />
            Discord
          </div>
        </div>
      </div>
    </div>
  )}
</body>
</html>